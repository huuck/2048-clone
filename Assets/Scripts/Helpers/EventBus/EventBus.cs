//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18331
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
public class EventBus : Singleton<EventBus> {
	public delegate void Listener();

	private List<VOEventToListener> eventToListeners;
	private bool 					verbose			 = false;

	protected EventBus () {
		eventToListeners = new List<VOEventToListener>();
	}

	public void AddEventListener(int eventID, Listener listener) {
		eventToListeners.Add(new VOEventToListener(eventID, listener));
		if(verbose == true) {
			Debug.Log("[EVENTBUS] Adding event listener on eventID " + eventID);
		}
	}

	public void DispatchEvent(int eventID) {
		int i = 0;
		for(i = 0; i < eventToListeners.Count; i++) {
			if(eventToListeners[i].EventID == eventID) {
				eventToListeners[i].Listener();

				if(verbose == true) {
					Debug.Log("[EVENTBUS] Executing handler for eventID " + eventID);
				}
			}
		}
	}

	public void RemoveEventListener(int eventID, Listener listener) {
		int i = 0;
		for(i = 0; i < eventToListeners.Count; i++) {
			if(eventToListeners[i].EventID == eventID && eventToListeners[i].Listener == listener) {
				eventToListeners.RemoveAt(i);
				return;
			}
		}
	}
}

